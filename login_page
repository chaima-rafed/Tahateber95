// ignore_for_file: unnecessary_import, library_private_types_in_public_api, prefer_final_fields, sized_box_for_whitespace, prefer_const_constructors, avoid_unnecessary_containers, deprecated_member_use, prefer_typing_uninitialized_variables, non_constant_identifier_names, unused_local_variable, unused_element, use_build_context_synchronously, unused_import, unused_field, avoid_print, must_call_super, prefer_const_declarations

//import 'package:exmpeeeee/pages/Profile_page.dart';
import 'package:exmpeeeee/pages/rest/rest_api.dart';
import 'dart:convert';

import 'package:exmpeeeee/pages/widgets/header_widget.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:exmpeeeee/pages/Splash_screen.dart';
import '../common/Theme_helper.dart';
import 'Registration_page.dart';
import 'package:exmpeeeee/pages/Profile_page.dart';

class LoginPage extends StatefulWidget {
  const LoginPage({Key? key}) : super(key: key);

  @override
  _LoginPageState createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  double _headerHeight = 200;
  final GlobalKey _formKey = GlobalKey<FormState>();
  final TextEditingController _usernameController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();
  late SharedPreferences _sharedPreferences;
  late String passengerId;

  //AuthController authController = AuthController();*

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: SingleChildScrollView(
        child: Column(
          children: [
            Container(
              height: _headerHeight,
              child: HeaderWidget(_headerHeight, true, Icons.login_rounded),
            ),
            SafeArea(
              child: Container(
                padding: EdgeInsets.fromLTRB(20, 10, 20, 10),
                child: Column(
                  children: [
                    Text(
                      'Login',
                      style: TextStyle(
                          fontSize: 60, fontWeight: FontWeight.normal),
                    ),
                    SizedBox(height: 30.0),
                    Form(
                      key: _formKey,
                      child: Column(
                        children: [
                          TextField(
                            controller: _usernameController,
                            decoration: ThemeHelper().textInputDecoration(
                              'User Name',
                              'Enter your Name',
                            ),
                          ),
                          SizedBox(
                            height: 30,
                          ),
                          TextField(
                            controller: _passwordController,
                            obscureText: true,
                            decoration: ThemeHelper().textInputDecoration(
                              'User password',
                              'Enter your password',
                            ),
                          ),
                          SizedBox(
                            height: 15,
                          ),
                          Container(
                            child: Text('Forget your password'),
                          ),
                          SizedBox(
                            height: 15,
                          ),
                          Container(
                            decoration:
                                ThemeHelper().buttonBoxDecoration(context),
                            child: ElevatedButton(
                              style: ThemeHelper().buttonStyle(),
                              child: Padding(
                                padding: EdgeInsets.fromLTRB(40, 10, 40, 10),
                                child: Text(
                                  'Sign in'.toUpperCase(),
                                  style: TextStyle(
                                    fontSize: 20,
                                    fontWeight: FontWeight.bold,
                                    color: Colors.white,
                                  ),
                                ),
                              ),
                              onPressed: () {
                                //pour tronsfer a profile si les information sont jeste
                                _usernameController.text.isNotEmpty &&
                                        _passwordController.text.isNotEmpty
                                    ? doLogin(_usernameController.text,
                                        _passwordController.text)
                                    : Fluttertoast.showToast(
                                        msg: 'All field are required',
                                        textColor: Colors.red);
                                Navigator.pushReplacement(
                                    context,
                                    MaterialPageRoute(
                                        builder: (context) => ProfilePage(
                                              userId: int.parse(passengerId),
                                            )));
                              },
                            ),
                          ),
                          Container(
                            margin: EdgeInsets.fromLTRB(10, 20, 10, 20),
                            child: Text.rich(
                              TextSpan(
                                children: [
                                  TextSpan(text: "Don't have an account? "),
                                  TextSpan(
                                    text: 'Create',
                                    recognizer: TapGestureRecognizer()
                                      ..onTap = () {
                                        Navigator.push(
                                            context,
                                            MaterialPageRoute(
                                                builder: (context) =>
                                                    RegistrationPage()));
                                        // Ajoutez ici le code à exécuter lorsque le texte est tapé
                                      },
                                    style: TextStyle(
                                        fontWeight: FontWeight.bold,
                                        color: Theme.of(context).accentColor),
                                  ),
                                ],
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  doLogin(String username, String password) async {
    _sharedPreferences = await SharedPreferences.getInstance();
    var res = await passengerLogin(username.trim(), password.trim());  
    if (res['Success']) {
      String passengerEmail = res['passenger'][0]['email'];
      passengerId = res['passenger'][0]['id'];  
      _sharedPreferences.setString('passengerid', passengerId);
      _sharedPreferences.setString('passengeremail', passengerEmail);
      Route route = MaterialPageRoute(
          builder: (_) => ProfilePage(userId: int.parse(passengerId)));
      Navigator.pushReplacement(context, route);
    } else {
      Fluttertoast.showToast(
          msg: 'username and password not valid ?', textColor: Colors.red);
    }
  }
}
