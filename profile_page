// ignore_for_file: file_names, use_key_in_widget_constructors, prefer_final_fields, prefer_const_constructors, deprecated_member_use, prefer_const_literals_to_create_immutables, sized_box_for_whitespace, unnecessary_import, prefer_typing_uninitialized_variables, unused_local_variable, prefer_const_constructors_in_immutables, unused_field, unnecessary_string_interpolations

import 'dart:io';

import 'package:exmpeeeee/pages/widgets/header_widget.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'Forgot_password_page.dart';
import 'Forgot_password_verification_page.dart';
import 'Registration_page.dart';
import 'Splash_screen.dart';
import 'login_page.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

Future<User> fetchUserById(int id) async {
  final response = await http.get(Uri.parse('/passenger/profile/$id'));

  if (response.statusCode == 200) {
    final userData = jsonDecode(response.body);
    return User.fromJson(userData);
  } else {
    throw Exception('Failed to fetch user');
  }
}

class User {
  final File image;
  final String username;
  final String email;
  final String mobilenumber;

  // Add more properties as needed

  User(
      {required this.image,
      required this.username,
      required this.email,
      required this.mobilenumber});

  factory User.fromJson(Map<String, dynamic> json) {
    return User(
      image: json['image'],
      username: json['username'],
      email: json['email'],
      mobilenumber: json['mobilenumber'],
      // Map other properties accordingly
    );
  }
}

class ProfilePage extends StatefulWidget {
  final int userId;

  ProfilePage({required this.userId});
  @override
  State<StatefulWidget> createState() {
    return _ProfilePageState();
  }
}

class _ProfilePageState extends State<ProfilePage> {
  double _drawerIconSize = 24;
  double _drawerFontSize = 17;
  late final String imagePath;

  late Future<User> _userFuture;

  late final VoidCallback onClicked;

  @override
  void initState() {
    super.initState();
    _userFuture = fetchUserById(widget.userId);
  }

  @override
  Widget build(BuildContext context) {
    return FutureBuilder<User>(
      future: _userFuture,
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return CircularProgressIndicator();
        } else if (snapshot.hasError) {
          return Text('Error: ${snapshot.error}');
        } else {
          final user = snapshot.data!;
          return Scaffold(
            appBar: AppBar(
              title: Text(
                "Profile Page",
                style:
                    TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
              ),
              elevation: 0.5,
              iconTheme: IconThemeData(color: Colors.white),
              flexibleSpace: Container(
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                      begin: Alignment.topLeft,
                      end: Alignment.bottomRight,
                      colors: <Color>[
                        Theme.of(context).primaryColor,
                        Theme.of(context).accentColor,
                      ]),
                ),
              ),
              actions: [
                Container(
                  margin: EdgeInsets.only(
                    top: 16,
                    right: 16,
                  ),
                  child: Stack(
                    children: <Widget>[
                      Icon(Icons.notifications),
                      Positioned(
                        right: 0,
                        child: Container(
                          padding: EdgeInsets.all(1),
                          decoration: BoxDecoration(
                            color: Colors.red,
                            borderRadius: BorderRadius.circular(6),
                          ),
                          constraints: BoxConstraints(
                            minWidth: 12,
                            minHeight: 12,
                          ),
                          child: Text(
                            '5',
                            style: TextStyle(
                              color: Colors.white,
                              fontSize: 8,
                            ),
                            textAlign: TextAlign.center,
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
            drawer: Drawer(
              child: Container(
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                      begin: Alignment.topLeft,
                      end: Alignment.bottomRight,
                      stops: [
                        0.0,
                        1.0
                      ],
                      colors: [
                        Theme.of(context).primaryColor.withOpacity(0.2),
                        Theme.of(context).accentColor.withOpacity(0.5),
                      ]),
                ),
                child: ListView(
                  children: [
                    DrawerHeader(
                      decoration: BoxDecoration(
                        color: Theme.of(context).primaryColor,
                        gradient: LinearGradient(
                          begin: Alignment.topLeft,
                          end: Alignment.bottomRight,
                          stops: [0.0, 1.0],
                          colors: [
                            Theme.of(context).primaryColor,
                            Theme.of(context).accentColor,
                          ],
                        ),
                      ),
                      child: Container(
                        alignment: Alignment.bottomLeft,
                        child: Text(
                          "Carpool DZ",
                          style: TextStyle(
                              fontSize: 25,
                              color: Colors.white,
                              fontWeight: FontWeight.bold),
                        ),
                      ),
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.screen_lock_landscape_rounded,
                        size: _drawerIconSize,
                        color: Theme.of(context).accentColor,
                      ),
                      title: Text(
                        'Splash Screen',
                        style: TextStyle(
                          fontSize: 17,
                          color: Theme.of(context).accentColor,
                        ),
                      ),
                      onTap: () {
                        Navigator.push(
                            context,
                            MaterialPageRoute(
                                builder: (context) =>
                                    Splash_screen(title: "Splash Screen")));
                      },
                    ),
                    ListTile(
                      leading: Icon(Icons.login_rounded,
                          size: _drawerIconSize,
                          color: Theme.of(context).accentColor),
                      title: Text(
                        'Login Page',
                        style: TextStyle(
                            fontSize: _drawerFontSize,
                            color: Theme.of(context).accentColor),
                      ),
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(builder: (context) => LoginPage()),
                        );
                      },
                    ),
                    Divider(
                      color: Theme.of(context).primaryColor,
                      height: 1,
                    ),
                    ListTile(
                      leading: Icon(Icons.person_add_alt_1,
                          size: _drawerIconSize,
                          color: Theme.of(context).accentColor),
                      title: Text(
                        'Registration Page',
                        style: TextStyle(
                            fontSize: _drawerFontSize,
                            color: Theme.of(context).accentColor),
                      ),
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                              builder: (context) => RegistrationPage()),
                        );
                      },
                    ),
                    Divider(
                      color: Theme.of(context).primaryColor,
                      height: 1,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.password_rounded,
                        size: _drawerIconSize,
                        color: Theme.of(context).accentColor,
                      ),
                      title: Text(
                        'Forgot Password Page',
                        style: TextStyle(
                            fontSize: _drawerFontSize,
                            color: Theme.of(context).accentColor),
                      ),
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                              builder: (context) => ForgotPasswordPage()),
                        );
                      },
                    ),
                    Divider(
                      color: Theme.of(context).primaryColor,
                      height: 1,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.verified_user_sharp,
                        size: _drawerIconSize,
                        color: Theme.of(context).accentColor,
                      ),
                      title: Text(
                        'Verification Page',
                        style: TextStyle(
                            fontSize: _drawerFontSize,
                            color: Theme.of(context).accentColor),
                      ),
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                              builder: (context) =>
                                  ForgotPasswordVerificationPage()),
                        );
                      },
                    ),
                    Divider(
                      color: Theme.of(context).primaryColor,
                      height: 1,
                    ),
                    ListTile(
                      leading: Icon(
                        Icons.logout_rounded,
                        size: _drawerIconSize,
                        color: Theme.of(context).accentColor,
                      ),
                      title: Text(
                        'Logout',
                        style: TextStyle(
                            fontSize: _drawerFontSize,
                            color: Theme.of(context).accentColor),
                      ),
                      onTap: () {
                        SystemNavigator.pop();
                      },
                    ),
                  ],
                ),
              ),
            ),
            body: SingleChildScrollView(
              child: Stack(
                children: [
                  Container(
                      height: 100,
                      child: HeaderWidget(
                        100,
                        false,
                        Icons.house_rounded,
                      )),
                  Container(
                    margin: EdgeInsets.fromLTRB(25, 10, 25, 10),
                    padding: EdgeInsets.fromLTRB(10, 0, 10, 0),
                    child: Column(
                      children: [
                        Container(
                          padding: EdgeInsets.all(10),
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(100),
                            border: Border.all(width: 5, color: Colors.white),
                            color: Colors.white,
                            boxShadow: [
                              BoxShadow(
                                  color: Colors.black12,
                                  blurRadius: 20,
                                  offset: const Offset(5, 5)),
                            ],
                          ),
                          child: Icon(
                            Icons.person,
                            size: 80,
                            color: Colors.grey.shade300,
                          ),
                          // Add any child widgets here if needed
                        ),
                        SizedBox(
                          height: 20,
                        ),
                        Text(
                          '${user.username}',
                          style: TextStyle(
                              fontSize: 22, fontWeight: FontWeight.bold),
                        ),
                        SizedBox(
                          height: 20,
                        ),
                        Text(
                          ('passager'),
                          style: TextStyle(
                              fontSize: 16, fontWeight: FontWeight.bold),
                        ),
                        SizedBox(
                          height: 10,
                        ),
                        Container(
                          padding: EdgeInsets.all(10),
                          child: Column(
                            children: <Widget>[
                              Container(
                                padding: const EdgeInsets.only(
                                    left: 8.0, bottom: 4.0),
                                alignment: Alignment.topLeft,
                                child: Text(
                                  "User Information",
                                  style: TextStyle(
                                    color: Colors.black87,
                                    fontWeight: FontWeight.w500,
                                    fontSize: 16,
                                  ),
                                  textAlign: TextAlign.left,
                                ),
                              ),
                              Card(
                                child: Container(
                                  alignment: Alignment.topLeft,
                                  padding: EdgeInsets.all(15),
                                  child: Column(
                                    children: <Widget>[
                                      Column(
                                        children: <Widget>[
                                          ...ListTile.divideTiles(
                                            color: Colors.grey,
                                            tiles: [
                                              ListTile(
                                                contentPadding:
                                                    EdgeInsets.symmetric(
                                                        horizontal: 12,
                                                        vertical: 4),
                                                leading:
                                                    Icon(Icons.my_location),
                                                title: Text("Location"),
                                                subtitle: Text("ALG"),
                                              ),
                                              ListTile(
                                                leading: Icon(Icons.email),
                                                title: Text('${user.username}'),
                                                subtitle: Text(
                                                    "f.kountar0035@gmail.com"),
                                              ),
                                              ListTile(
                                                leading: Icon(Icons.phone),
                                                title: Text(
                                                  '${user.mobilenumber}',
                                                ),
                                                subtitle: Text("99--99876-56"),
                                              ),
                                              ListTile(
                                                leading: Icon(Icons.person),
                                                title: Text("About Me"),
                                                subtitle: Text(
                                                    "This is a about me link and you can know about me in this section."),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          );
        }
      },
    );
  }
}
/*void checkProfile() async {
    var networkHandler;
    var response = await networkHandler.get("/profile");
    if (response["status"] == true) {
      setState(() {
        var page = ProfilePage();
      });
    } else {
      setState(() {
        var page = button();
      });
    }
  }
  
  button() {
  }
  
  void setState(Null Function() param0) {
  //}*/
